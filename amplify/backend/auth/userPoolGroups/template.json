{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "authfreegoreact26705d96UserPoolId": {
            "Type": "String",
            "Default": "authfreegoreact26705d96UserPoolId"
        },
        
        "authfreegoreact26705d96IdentityPoolId": {
            "Type": "String",
            "Default": "authfreegoreact26705d96IdentityPoolId"
        },
        
        "authfreegoreact26705d96AppClientID": {
            "Type": "String",
            "Default": "authfreegoreact26705d96AppClientID"
        },
        "authfreegoreact26705d96AppClientIDWeb": {
            "Type": "String",
            "Default": "authfreegoreact26705d96AppClientIDWeb"
        },
        "AuthRoleArn": {
            "Type": "String"
        },
        "UnauthRoleArn": {
            "Type": "String"
        },
        "env": {
            "Type": "String"
        }
    },
    "Conditions": {
        "ShouldNotCreateEnvResources": {
            "Fn::Equals": [
                {
                    "Ref": "env"
                },
                "NONE"
            ]
        }
    },
    "Resources": {
    
        "adminsGroup": {
          "Type" : "AWS::Cognito::UserPoolGroup",
          "Properties" : {
              "GroupName" : "admins",
              "Precedence" : 1,
              
              "RoleArn" : {
                "Fn::GetAtt": [
                    "adminsGroupRole",
                    "Arn"
                ]
              },
              
              "UserPoolId" : {
                "Ref": "authfreegoreact26705d96UserPoolId"
              }
            }
        },
        
        "adminsGroupRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName":{
                    "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "authfreegoreact26705d96UserPoolId"
                          },
                          "-adminsGroupRole"
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "",
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": "cognito-identity.amazonaws.com"
                            },
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Condition": {
                              "StringEquals": {"cognito-identity.amazonaws.com:aud": {"Ref":"authfreegoreact26705d96IdentityPoolId"}},
                              "ForAnyValue:StringLike": {"cognito-identity.amazonaws.com:amr": "authenticated"}
                            }
                        }
                    ]
                }
            }
        },
     
    
        "managersGroup": {
          "Type" : "AWS::Cognito::UserPoolGroup",
          "Properties" : {
              "GroupName" : "managers",
              "Precedence" : 2,
              
              "RoleArn" : {
                "Fn::GetAtt": [
                    "managersGroupRole",
                    "Arn"
                ]
              },
              
              "UserPoolId" : {
                "Ref": "authfreegoreact26705d96UserPoolId"
              }
            }
        },
        
        "managersGroupRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName":{
                    "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "authfreegoreact26705d96UserPoolId"
                          },
                          "-managersGroupRole"
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "",
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": "cognito-identity.amazonaws.com"
                            },
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Condition": {
                              "StringEquals": {"cognito-identity.amazonaws.com:aud": {"Ref":"authfreegoreact26705d96IdentityPoolId"}},
                              "ForAnyValue:StringLike": {"cognito-identity.amazonaws.com:amr": "authenticated"}
                            }
                        }
                    ]
                }
            }
        },
     
    
        "moderatorsGroup": {
          "Type" : "AWS::Cognito::UserPoolGroup",
          "Properties" : {
              "GroupName" : "moderators",
              "Precedence" : 3,
              
              "RoleArn" : {
                "Fn::GetAtt": [
                    "moderatorsGroupRole",
                    "Arn"
                ]
              },
              
              "UserPoolId" : {
                "Ref": "authfreegoreact26705d96UserPoolId"
              }
            }
        },
        
        "moderatorsGroupRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName":{
                    "Fn::Join": [
                        "",
                        [
                          {
                            "Ref": "authfreegoreact26705d96UserPoolId"
                          },
                          "-moderatorsGroupRole"
                        ]
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "",
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": "cognito-identity.amazonaws.com"
                            },
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Condition": {
                              "StringEquals": {"cognito-identity.amazonaws.com:aud": {"Ref":"authfreegoreact26705d96IdentityPoolId"}},
                              "ForAnyValue:StringLike": {"cognito-identity.amazonaws.com:amr": "authenticated"}
                            }
                        }
                    ]
                }
            }
        },
     
    
    
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::If": [
                        "ShouldNotCreateEnvResources",
                        {
                           
                        },
                        {

                            "Fn::Join": [
                                "",
                                [

                                  "freegoreact26705d96",
                                  "-ExecutionRole-",
                                  {
                                    "Ref": "env"
                                  }
                                ]
                            ]
                        }
                    ]
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "UserGroupLogPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "UserGroupExecutionPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cognito-identity:SetIdentityPoolRoles",
                                        "cognito-identity:ListIdentityPools",
                                        "cognito-identity:describeIdentityPool"

                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "UserGroupPassRolePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:PassRole"
                                    ],
                                    "Resource": [
                                        { "Ref": "AuthRoleArn" },
                                        { "Ref": "UnauthRoleArn" }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "RoleMapFunction": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": ["LambdaExecutionRole"],
            "Properties": {
                "Code": {
                    "ZipFile": {
                        "Fn::Join": [
                            "\n",
                            [
                                "const response = require('cfn-response');",
                                "const AWS = require('aws-sdk');",
                                "exports.handler = (event, context) => {",
                                "if (event.RequestType == 'Delete') {",
                                "    response.send(event, context, response.SUCCESS, {message: 'Request type delete'})",
                                "};",
                                "if (event.RequestType == 'Create' || event.RequestType == 'Update') {",
                                "    let { identityPoolId, appClientID, appClientIDWeb, userPoolId, region }  = event.ResourceProperties;",
                                "    try {",
                                "       const cognitoidentity = new AWS.CognitoIdentity();",
                                "       let params = {",
                                "           IdentityPoolId: identityPoolId,",
                                "           Roles: {",
                                "               'authenticated': event.ResourceProperties.AuthRoleArn,",
                                "               'unauthenticated': event.ResourceProperties.UnauthRoleArn,",
                                "           },",
                                "           RoleMappings: {}",
                                "       };",
                                "       if (appClientIDWeb) {",
                                "           params.RoleMappings[`cognito-idp.${region}.amazonaws.com/${userPoolId}:${appClientIDWeb}`] = {",
                                "               Type: 'Token',",
                                "               AmbiguousRoleResolution: 'AuthenticatedRole',",
                                "           }",
                                "       }",
                                "       if (appClientID) {",
                                "           params.RoleMappings[`cognito-idp.${region}.amazonaws.com/${userPoolId}:${appClientID}`] = {",
                                "               Type: 'Token',",
                                "               AmbiguousRoleResolution: 'AuthenticatedRole',",
                                "           }",
                                "       }",
                                "    cognitoidentity.setIdentityPoolRoles(params).promise();",
                                "    response.send(event, context, response.SUCCESS, {message: 'Successfully updated identity pool.'})",
                                "    } catch(err) {",
                                "        response.send(event, context, response.FAILED, {message: 'Error updating identity pool'});",
                                "    }",
                                "   };",
                                "};"

                            ]
                        ]
                    }
                },
                "Handler": "index.handler",
                "Runtime": "nodejs12.x",
                "Timeout": 300,
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                }
            }
        },
        "RoleMapFunctionInput": {
            "Type": "Custom::LambdaCallout",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "RoleMapFunction",
                        "Arn"
                    ]
                },
                "AuthRoleArn": {
                    "Ref": "AuthRoleArn"
                },
                "UnauthRoleArn":  {
                    "Ref": "UnauthRoleArn"
                },
                "identityPoolId": {
                    "Ref": "authfreegoreact26705d96IdentityPoolId"
                },
                "userPoolId": {
                    "Ref": "authfreegoreact26705d96UserPoolId"
                },
                "appClientIDWeb": {
                    "Ref": "authfreegoreact26705d96AppClientIDWeb"
                },
                "appClientID": {
                    "Ref": "authfreegoreact26705d96AppClientID"
                },
                "region": {
                    "Ref": "AWS::Region"
                },
                "env": {
                    "Ref": "env"
                }
            },
            "DependsOn": ["RoleMapFunction"]
        }
   
    },
    
    "Outputs": {
      
        "adminsGroupRole": {
            "Value": {
                "Fn::GetAtt": [
                    "adminsGroupRole",
                    "Arn"
                ]
            }
        
        },
        
      
        "managersGroupRole": {
            "Value": {
                "Fn::GetAtt": [
                    "managersGroupRole",
                    "Arn"
                ]
            }
        
        },
        
      
        "moderatorsGroupRole": {
            "Value": {
                "Fn::GetAtt": [
                    "moderatorsGroupRole",
                    "Arn"
                ]
            }
        
        }
        
      
    }
    
}
